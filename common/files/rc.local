#!/bin/bash

if [ -e /usr/bin/nodejs ]
then
    # read in BOOTIF from /proc/cmdline
    BOOTIF=$(cat /proc/cmdline)
    BOOTIF=${BOOTIF##*BOOTIF=}
    BOOTIF=${BOOTIF%% *}
    # converts BOOTIF 01-(hyphen-mac-address) to mac:address
    temp_mac=${BOOTIF#*-}
    # convert to typical mac address format by replacing "-" with ":"
    bootif_mac=""
    IFS='-'
    for x in $temp_mac ; do
        if [ -z "$bootif_mac" ]; then
            bootif_mac="$x"
        else
            bootif_mac="$bootif_mac:$x"
        fi
    done
    unset IFS

    # parse out SYSLOGSERVER=... from the /proc/cmdline
    SS=$(cat /proc/cmdline)
    # this next test is dependent on /bin/bash, doesn't work in /bin/sh
    if [[ ${SS} == *SYSLOGSERVER* ]]; then
        SS="${SS##*SYSLOGSERVER=}"
        SS="${SS%% *}"
        echo "*.* @${SS}" > /etc/rsyslog.d/60-forward.conf
    else
        echo "SYSLOGSERVER NOT SET IN KERNEL PARAMS (/proc/cmdline)"
    fi

    # parse out CD_API=... from the /proc/cmdline
    CB=$(cat /proc/cmdline)
    CB="${CB##*API_CB=}"
    CB="${CB%% *}"

    set -x

    if [ -f /opt/rc.local.hooks ];
    then
        /opt/rc.local.hooks
    fi

    curl -s http://${CB}/api/current/tasks/bootstrap.js?macAddress=${bootif_mac} | nodejs >/tmp/boostrap.log
    case $? in
        1 )
            echo 1 | sudo tee /proc/sys/kernel/sysrq
            echo b | sudo tee /proc/sysrq-trigger
            ;;
        2 )
            ipmitool -I open chassis power cycle ;;
        127 )
            exit 0 ;;
        * )
            echo 1 | sudo tee /proc/sys/kernel/sysrq
            echo b | sudo tee /proc/sysrq-trigger
            ;;
    esac
fi
exit 0
