---
- name: install git
  apt: name=git state=present
  sudo: yes

- name: install liblzma-dev
  apt: name=liblzma-dev state=present
  sudo: yes

- name: install libz-dev
  apt: name=libz-dev state=present
  sudo: yes

- name: install syslinx
  apt: name=syslinux state=present
  sudo: yes

- name: install genisoimage
  apt: name=genisoimage state=present
  sudo: yes

- name: install binutils
  apt: name=binutils-dev state=present
  sudo: yes

- name: install libiberty-dev
  apt: name=libiberty-dev state=present
  sudo: yes

- name: check out iPXE source repository
  git:  repo=https://git.ipxe.org/ipxe.git
        dest="{{ ipxe_build_env_path }}/ipxe"
        force=yes accept_hostkey=yes
        version={{ gitbranch }}

- name: copy in general.h configuration file for build
  copy: src=general.h dest="{{ ipxe_build_env_path }}/ipxe/src/config/local/general.h"
  sudo: no

- name: copy in dhcp.h configuration file for build
  copy: src=dhcp.h dest="{{ ipxe_build_env_path }}/ipxe/src/config/local/dhcp.h"
  sudo: no

- name: copy in the default.ipxe script
  copy: src=default.ipxe dest="{{ ipxe_build_env_path }}/ipxe/src/default.ipxe"
  sudo: no

######
# Group of ops to build our "general code", which is to say
#  the monorail.ipxe base image. The group build boths the
#  production monorail.ipxe, but also a couple of debug ones.
- name: clean the build
  command: make clean
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: build the general code
  command: make EMBED=default.ipxe
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: fetching monorail.ipxe file
  fetch: src={{ ipxe_build_env_path }}/ipxe/src/bin/{{ item }}
         dest={{ ipxe_build_artifact_path }}/monorail.ipxe fail_on_missing=yes
         flat=yes
  with_items:
    - ipxe.pxe

# Now for a version of the same to help debug communication issues.
- name: build the general code with communications level debug
  command: make DEBUG=dhcp:9,tftp,config:9,netdevice bin/ipxe.pxe EMBED=default.ipxe
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: fetching monorail.ipxe.com_debug file
  fetch: src={{ ipxe_build_env_path }}/ipxe/src/bin/{{ item }}
         dest={{ ipxe_build_artifact_path }}/monorail.ipxe.com_debug fail_on_missing=yes
         flat=yes
  with_items:
    - ipxe.pxe

# Now for a version of the same to help debug more device-type issues. Note, this is called
#  ".debug" to match existing use of .debug.
- name: build the general code with device related issues.
  command: make DEBUG=pci,device,intel bin/ipxe.pxe EMBED=default.ipxe
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: fetching monorail.ipxe.com_debug file
  fetch: src={{ ipxe_build_env_path }}/ipxe/src/bin/{{ item }}
         dest={{ ipxe_build_artifact_path }}/monorail.ipxe.debug fail_on_missing=yes
         flat=yes
  with_items:
    - ipxe.pxe


#####
# Group of ops for EFI builds targets
- name: disable COMBOOT in general.h for EFI builds
  command: sed -i '3 s/^/\/\//' {{ ipxe_build_env_path }}/ipxe/src/config/local/general.h
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: build the general efi 64
  command: make bin-x86_64-efi/snponly.efi EMBED=default.ipxe
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: build the general code efi 32
  command: make bin-i386-efi/snponly.efi
  args:
    chdir: "{{ ipxe_build_env_path }}/ipxe/src"

- name: fetch the resulting files efi 64 bit file
  fetch: src={{ ipxe_build_env_path }}/ipxe/src/bin-x86_64-efi/{{ item }}
        dest={{ ipxe_build_artifact_path }}/monorail-efi64-snponly.efi fail_on_missing=yes
        flat=yes
  with_items:
    - snponly.efi

- name: fetch the resulting efi 32 bit file
  fetch: src={{ ipxe_build_env_path }}/ipxe/src/bin-i386-efi/{{ item }}
        dest={{ ipxe_build_artifact_path }}/monorail-efi32-snponly.efi fail_on_missing=yes
        flat=yes
  with_items:
    - snponly.efi
