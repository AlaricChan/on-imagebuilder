#!/bin/sh

case "${1}" in
    prereqs)
        exit 0
        ;;
esac
. /scripts/functions

echo "Configuring Networking"

BOOTIF=$(cat /proc/cmdline)
BOOTIF=${BOOTIF##*BOOTIF=}
BOOTIF=${BOOTIF%% *}

SYSLOGSERVER=$(cat /proc/cmdline)
SYSLOGSERVER=${SYSLOGSERVER##*SYSLOGSERVER=}
SYSLOGSERVER=${SYSLOGSERVER%% *}

sleep 5

if [ -n "${BOOTIF}" ]; then
        echo "BOOTIF set to ${BOOTIF} - processing that option"
        # pxelinux sets BOOTIF to a value based on the mac address of the
        # network card used to PXE boot, so use this value for DEVICE rather
        # than a hard-coded device name from initramfs.conf. this facilitates
        # network booting when machines may have multiple network cards.
        # pxelinux sets BOOTIF to 01-$mac_address

        # strip off the leading "01-", which isn't part of the mac
        # address
        temp_mac=${BOOTIF#*-}

        # convert to typical mac address format by replacing "-" with ":"
        bootif_mac=""
        IFS='-'
        for x in $temp_mac ; do
            if [ -z "$bootif_mac" ]; then
                bootif_mac="$x"
            else
                bootif_mac="$bootif_mac:$x"
            fi
        done
        unset IFS

        # look for devices with matching mac address, and set DEVICE to
        # appropriate value if match is found.
        for device in /sys/class/net/* ; do
            if [ -f "$device/address" ]; then
                current_mac=$(cat "$device/address")
                if [ "$bootif_mac" = "$current_mac" ]; then
                    DEVICE=${device##*/}
                    break
                fi
            fi
       done
fi

# networking already configured thus bail out
[ -n "${DEVICE}" ] && [ -e /run/net-"${DEVICE}".conf ] && return 0

# support ip options see linux sources
# Documentation/filesystems/nfs/nfsroot.txt
# Documentation/frv/booting.txt

for ROUNDTTT in 2 3 4 6 9 16 25 36 64 100; do

    # The NIC is to be configured if this file does not exist.
    # Ip-Config tries to create this file and when it succeds
    # creating the file, ipconfig is not run again.
    for x in /run/net-"${DEVICE}".conf /run/net-*.conf ; do
       [ -e "$x" ] && echo "file ${x} exists" && sleep 2 && break 2
    done

    case ${IP} in
    none|off)
        # Do nothing
        ;;
    ""|on|any)
        # Bring up device
        echo "Bringing up device ${DEVICE} with timeout ${ROUNDTTT}"
        sleep 2
        ipconfig -t ${ROUNDTTT} "${DEVICE}"
        ;;
    dhcp|bootp|rarp|both)
        ipconfig -t ${ROUNDTTT} -c ${IP} -d "${DEVICE}"
        ;;
    *)
        ipconfig -t ${ROUNDTTT} -d $IP

        # grab device entry from ip option
        NEW_DEVICE=${IP#*:*:*:*:*:*}
        if [ "${NEW_DEVICE}" != "${IP}" ]; then
            NEW_DEVICE=${NEW_DEVICE%:*}
        else
            # wrong parse, possibly only a partial string
            NEW_DEVICE=
        fi
        if [ -n "${NEW_DEVICE}" ]; then
            DEVICE="${NEW_DEVICE}"
        fi
        ;;
    esac
done

# source ipconfig output
if [ -n "${DEVICE}" ]; then
    # source specific bootdevice
    . /run/net-${DEVICE}.conf
else
    # source any interface...
    # ipconfig should have quit after first response
    . /run/net-*.conf
fi

/bin/busybox syslogd -R ${SYSLOGSERVER} &
